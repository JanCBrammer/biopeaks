name: test
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

jobs:

  lint_test:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:    # all steps of this job will run using this matrix (matrix not accessible to other jobs)
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
          python-version: ${{ matrix.python-version }}

    - name: Install and configure Poetry
      uses: snok/install-poetry@v1.1.6
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-pip-wheels
      uses: actions/cache@v2
      with:
        path: ~/.cache
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry update
        poetry install --no-interaction --no-root

    - name: Install biopeaks
      run: poetry install --no-interaction

    - name: Lint
      if: matrix.os == 'ubuntu-latest'
      shell: bash -l {0}
      run: |
        source $VENV
        flake8 biopeaks --exclude biopeaks/images,biopeaks/tests/testdata,biopeaks/resources.py --max-complexity=10 --ignore E303,C901,E203,W503,E501,W504,E129,W605,E371,E731

    - name: Test on Windows
      if: matrix.os == 'windows-latest'
      shell: bash -l {0}
      run: |
        source $VENV
        pytest -v

    - name: Test on MacOS
      if: matrix.os == 'macos-latest'
      shell: bash -l {0}
      run: |
        source $VENV
        export QT_QPA_PLATFORM=offscreen
        pytest -v

    - name: Test on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      shell: bash -l {0}
      run: |    # run coverage only on Ubuntu
        source $VENV
        sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0
        xvfb-run pytest -v --cov-config=.coveragerc --cov-report=xml --cov=biopeaks

    - name: Upload coverage report
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
